name: CI Pipeline

on:
  push:
    branches:
      - main
      
jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      DOCKER_USERNAME: "sbonilla284"
      DOCKER_PASSWORD: "Admin123#"
          
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Construir la aplicación con Gradle
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: Iniciar sesión en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Construir y etiquetar imagen Docker
        run: |
          docker build -t ${{ env.DOCKER_USERNAME }}/app1:latest .
          docker tag ${{ env.DOCKER_USERNAME }}/app1:latest ${{ env.DOCKER_USERNAME }}/app1:${{ github.run_number }}

      - name: Subir imagen a Docker Hub
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/app1:latest
          docker push ${{ env.DOCKER_USERNAME }}/app1:${{ github.run_number }}
          
      - name: Clonar el repo del Helm Chart
        uses: actions/checkout@v3
        with:
          repository: Lufe04/Helm_Repo
          token: ${{ secrets.HELM_REPO_TOKEN }}
          fetch-depth: 0  # Permite hacer push
          ref: gh-pages  

      - name: Extraer Helm Chart
        run: |
          mkdir -p chart
          TAR_FILE=$(find . -name "*.tgz" | head -n 1)  # Encuentra el .tgz automáticamente
          if [[ -f "$TAR_FILE" ]]; then
            tar -xzf "$TAR_FILE" -C chart
          else
            echo "Error: No se encontró ningún archivo .tgz"
            exit 1
          fi

      - name: Modificar values.yaml
        run: |
          VALUES_FILE="chart/app1-chart/values.yaml"
          if [[ -f "$VALUES_FILE" ]]; then
            IMAGE_TAG="${{ github.run_number }}"
            yq e -i ".image.tag = \"${IMAGE_TAG}\"" "$VALUES_FILE"
            yq e -i '.replicaCount = 2' "$VALUES_FILE"
          else
            echo "Error: No se encontró values.yaml"
            exit 1
          fi

      - name: Reempaquetar Helm Chart y moverlo a charts/
        run: |
          mkdir -p charts
          helm package chart/app1-chart -d charts/  # -d indica el directorio de destino
      
      - name: Actualizar index.yaml dentro de charts/
        run: |
          cd charts/
          helm repo index --merge index.yaml --url https://github.com/Lufe04/Helm_Repo/tree/main/charts .

      - name: Subir cambios al repo
        run: |
          git config --global user.email "luisacarpintero01@gmail.com"
          git config --global user.name "GitHub Actions"
          
          # Guardar cambios no confirmados para evitar errores en pull
          git stash
          
          # Actualizar la rama con los últimos cambios remotos
          git pull origin gh-pages --rebase
          
          # Restaurar cambios guardados en stash (si existían)
          git stash pop || echo "No hay cambios guardados en stash"
          
          COMMIT_NUMBER=$(date +"%Y%m%d%H%M%S")

          # Agregar y subir cambios
          git add .
          git commit -m "Update values.yaml and repackage Helm chart ${{ github.run_number }}"
          git push origin gh-pages

